<?
/*Set breakpoints*/
function BPX(bps, cb) {
    var out = '';
    bps.forEach(function(s, i){
        if (s > 0) {
        out += ?>
        @media (min-width: ${s}px) {
            ${cb('bp'+i+'-')} 
        }<? } else { out += cb(''); }
    }); O?><? out;
}

/*Is defined*/
function isdef(v) {
    return typeof v
    !=='undefined';
}

/*Hex to RGB object*/
function hex2rgb(hex) {
    hex = hex || '';
    hex = hex.toString();
    var shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
    hex = hex.replace(shorthandRegex, function(m, r, g, b) {
        return r + r + g + g + b + b;
    });
    var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
    return result ? {
        r: parseInt(result[1], 16),
        g: parseInt(result[2], 16),
        b: parseInt(result[3], 16)
    } : null;
}

/*RGB to hex*/
function rgb2hex(r, g, b) {
  return "#" + ((1 << 24) +
  (r << 16) + (g << 8) + b)
  .toString(16).slice(1);
}

/* Darken color */
function darken(hex, amn) {
    var rgb = hex2rgb(hex);
    var r = rgb.r - amn;
    var g = rgb.g - amn;
    var b = rgb.b - amn;
    if (r < 0) r = 0;
    if (g < 0) g = 0;
    if (b < 0) b = 0;
    if (r > 255) r = 255;
    if (g > 255) g = 255;
    if (b > 255) b = 255;
    return rgb2hex(r,g,b);
}

/* Alpha color */
function alpha(hex, a) {
    var rgb = hex2rgb(hex);
    var r = rgb.r;
    var g = rgb.g;
    var b = rgb.b;
    var c = r+','+g+','+b+','+a;
    return 'rgba('+c+')';
}

/* Horizontal gradient */
function gradX(c1, c2, im) {
    im = im || '';
    im?im=?>url('${im}'),<?:'';
    R?>background: ${im}${c1};
    background: ${im}-moz-linear-gradient(left, ${c1} 0%, ${c2} 100%);
    background: ${im}-webkit-linear-gradient(left, ${c1} 0%, ${c2} 100%);
    background: ${im}linear-gradient(to right, ${c1} 0%, ${c2} 100%);
<?}

/* Vertical gradient */
function gradY(c1, c2, im) {
    im = im || '';
    im?im=?>url('${im}'),<?:'';
    R?>background: ${im}${c1};
    background: ${im}-moz-linear-gradient(top, ${c1} 0%, ${c2} 100%);
    background: ${im}-webkit-linear-gradient(top, ${c1} 0%, ${c2} 100%);
    background: ${im}linear-gradient(to bottom, ${c1} 0%, ${c2} 100%);
<?}

/* Radial gradient */
function gradC(c1, c2, im) {
    im = im || '';
    im?im=?>url('${im}'),<?:'';
    R?>background: ${im}${c1};
    background: ${im}-moz-radial-gradient(center, ellipse cover, ${c1} 0%, ${c2} 100%);
    background: ${im}-webkit-radial-gradient(center, ellipse cover, ${c1} 0%, ${c2} 100%);
    background: ${im}radial-gradient(ellipse at center, ${c1} 0%, ${c2} 100%);
<?}

/* Horizontal gloss */
function glossX(c1, c2,im) {
    im = im || '';
    im?im=?>url('${im}'),<?:'';
    R?>background: ${im}${c1};
    background: ${im}-webkit-gradient(linear, left top, right top,
    from(${c1}),
    color-stop(50%, ${c1}),
    color-stop(50%, ${c2}),
    to(${c2}));
    background: ${im}linear-gradient(to right,
    ${c1} 0%,${c1} 50%,${c2} 50%,${c2} 100%);
<?}

/* Vertical gloss */
function glossY(c1, c2, im) {
    im = im || '';
    im?im=?>url('${im}'),<?:'';
    R?>background: ${im}${c1};
    background: ${im}-webkit-gradient(linear, left top, left bottom,
    from(${c1}),
    color-stop(50%, ${c1}),
    color-stop(50%, ${c2}),
    to(${c2}));
    background: ${im}linear-gradient(to bottom,
    ${c1} 0%,${c1} 50%,${c2} 50%,${c2} 100%);
<?}

?>
